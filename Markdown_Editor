available_formatters = ["!help", "!done", "plain", "bold", "italic", "header", "link", "inline-code", "ordered-list", "unordered-list", "new-line"]
all_text = []
go = 0

def ordered_list_or_not(order):
    global all_text
    if order == "ordered":
        while True:
            number_of_rows = int(input("Number of rows: "))
            if number_of_rows > 0:
                txt = [str(i) + ". " + input(f"Row #{i}: ") for i in range(1, number_of_rows + 1)]
                all_text += "\n".join(txt) + "\n"
                printer()
                start()
                break
            else:
                print("The number of rows should be greater than zero")
                continue

    if order == "unordered":
        while True:
            number_of_rows = int(input("Number of rows: "))
            if number_of_rows > 0:
                txt = ["* " + input(f"Row #{i}: ") for i in range(1, number_of_rows + 1)]
                all_text += "\n".join(txt) + "\n"
                printer()
                start()
                break
            else:
                print("The number of rows should be greater than zero")
                continue

def printer():
    for item in all_text:
        print(item, end='')
    print()

def header():
    while True:
        level = int(input("Level: "))
        if level <= 6 and level >= 1:
            text = input("Text: ")
            itog = "#" * level
            all_text.append(itog + " " + text + "\n")
            printer()
            start()
            break
        else:
            print("The level should be within the range of 1 to 6")
            continue

def link():
    label = input("Label: ")
    url = input("URL: ")
    all_text.append(f"[{label}]({url})")
    printer()
    start()

def bold():
    bold_text = input("Text: ")
    bold_text1 = "**" + bold_text + "**"
    all_text.append(bold_text1)
    printer()
    start()

def italic():
    italic_text = input("Text: ")
    italic_text1 = "*" + italic_text + "*"
    all_text.append(italic_text1)
    printer()
    start()

def plain():
    plain_text = input("Text: ")
    all_text.append(plain_text)
    printer()
    start()

def inline_code():
    inline_code_text = input("Text: ")
    inline_code_text1 = "`" + inline_code_text + "`"
    all_text.append(inline_code_text1)
    printer()
    start()

def new_line():
    new_line_text = "\n"
    all_text.append(new_line_text)
    printer()
    start()

def start():
    global go
    while go == 0:
        formatter = input("Choose a formatter: ")
        if formatter == "!done":
           handle = open("output.md", "w")
           for item in all_text:
               handle.write(item)
           handle.close()
           go += 1
        if formatter == "!help":
            print("Available formatters: plain bold italic header link inline-code ordered-list unordered-list new-line")
            print("Special commands: !help !done")
        if formatter not in available_formatters:
            print("Unknown formatting type or command")
        if formatter == "header":
            header()
        if formatter == "print":
            print(all_text)
        if formatter == "link":
            link()
        if formatter == "bold":
            bold()
        if formatter == "plain":
            plain()
        if formatter == "inline-code":
            inline_code()
        if formatter == "new-line":
            new_line()
        if formatter == "italic":
            italic()
        if formatter == "ordered-list":
            ordered_list_or_not(order="ordered")
        if formatter == "unordered-list":
            ordered_list_or_not(order="unordered")
start()
